define(function () {
return ["GUID-02A694CF-88A5-4ADA-8785-7EEEC62D66EA.html@@@Worldwide Sales and Service@@@AMERICAS ASIA/PACIFIC ASIA/PACIFIC EUROPE Corporate Office 2355 West Chandler Blvd. Chandler, AZ 85224-6199 Tel: 480-792-7200 Fax: 480-792-7277 Technical Support: www.microchip.com/support Web...","GUID-039F81A9-62FE-4CE6-B5C9-78DABD2ED4D5.html@@@51 CLASSB_SRAM_Callback@@@Function static void CLASSB_SRAM_Callback (uint32_t status, uintptr_t context); Summary This function is used for interrupt callback. Description This function will be triggered when a single fault...","GUID-07985EED-D525-413B-AEFE-78B563328687.html@@@Quality Management System@@@For information regarding Microchip\u2019s Quality Management Systems, please visit www.microchip.com/quality...","GUID-0FB3F908-88EE-45CE-94F5-E97AF9049C9B.html@@@Microchip Information@@@...","GUID-125F1A93-76CC-4BD7-BACA-01844FBD5F4F.html@@@Legal Notice@@@This publication and the information herein may be used only with Microchip products, including to design, test, and integrate Microchip products with your application. Use of this information in any...","GUID-136CA7EF-75CE-4A5A-AF1D-2A07D965DF00.html@@@10 CLASSB_CLOCK_TEST_RTC_RATIO_NS@@@Summary Duration of RTC clock in nano seconds. Description Defines the duration of RTC clock in nano seconds. This is used to calculate the duration of CPU clock test in terms of RTC cycles. Remarks...","GUID-21750586-F9F2-4E33-87FB-8F2994BF4744.html@@@Trademarks@@@The Microchip name and logo, the Microchip logo, Adaptec, AVR, AVR logo, AVR Freaks, BesTime, BitCloud, CryptoMemory, CryptoRF, dsPIC, flexPWR, HELDO, IGLOO, JukeBlox, KeeLoq, Kleer, LANCheck, LinkMD...","GUID-25083117-CD6F-440F-98C3-D593F21C4427.html@@@31 CLASSB_SST_RESULT_BF@@@Summary Pointer to the structure for the Class B library startup self-test result. Description For bit-field representation of Class B library test results. Remarks None. typedef struct {...","GUID-362D5C93-54EE-45F1-A224-E22F524014A8.html@@@14 CLASSB_INTR_DEVICE_VECT_OFFSET@@@Summary Defines the offset for first device specific interrupt. Description This constant defines the offset for first device specific interrupt. Remarks This value must not be modified. #define...","GUID-3DBB9DD7-2EDF-4A8C-A617-11675AA91BBF.html@@@5 CLASSB_CLOCK_MAX_SYSTICK_VAL@@@Summary Upper limit of SysTick counter. Description Defines the upper limit of SysTick counter. Remarks This value must not be modified. #define CLASSB_CLOCK_MAX_SYSTICK_VAL ( 0xffffffU )...","GUID-411250BD-9A70-4EE8-8285-27E26026ED3A.html@@@38 CLASSB_CPU_RegistersTest@@@Function CLASSB_TEST_STATUS CLASSB_CPU_RegistersTest (bool running_context); Summary This self-test checks the processor core registers of the CPU, to detect stuck-at faults. Description This...","GUID-43B6AAF3-6FF4-47CC-804F-E008FEBF745B.html@@@32 CLASSB_STARTUP_STATUS@@@Summary Identifies startup test status. Description This is return type for the function which calls all self-tests during startup. Remarks None. typedef enum { CLASSB_STARTUP_TEST_NOT_EXECUTED = 0U...","GUID-4B615DB4-D27D-4018-B535-8413DFF5DF06.html@@@17 CLASSB_INTR_TEST_TC_COUNT@@@Summary Defines the counter value for TC0 peripheral. Description This constant defines the counter value for TC0 peripheral, for the interrupt self-test. Remarks This value must not be modified...","GUID-4D510C37-B36B-4A19-9E48-FF69A9D5BAE8.html@@@37 CLASSB_App_WDT_Recovery@@@Function static void CLASSB_App_WDT_Recovery ( void ); Summary This function is called if a WDT reset is caused during run-time. Description This function is used inside the CLASSB_Init() function...","GUID-4FE9BE46-9E20-4CA2-B1A4-4D027899DDDC.html@@@11 CLASSB_COMPL_RESULT_ADDR@@@Summary Address of one&apos;s complement test results. Description This constant defines the address in SRAM where the one&apos;s complement of the test results are stored. Remarks This value must not be...","GUID-50390281-C32F-44CA-BB86-31950D88C0D1.html@@@48 CLASSB_Init@@@Function static CLASSB_INIT_STATUS CLASSB_Init ( void ); Summary This function is executed on every device reset. This shall be called right after the reset, before any other initialization is...","GUID-51420345-97C9-49CE-9721-49939323F474.html@@@34 CLASSB_TEST_STATE@@@Summary Identifies Class B library test state. Description This data type is used to update flags which indicates whether a test has started or not. Remarks None. typedef enum {...","GUID-533852F7-3960-427A-9B6A-06294109F8BB.html@@@3 CLASSB_CLOCK_ERROR_PERCENT@@@Summary Clock error percentage selected for startup test. Description Defines the acceptable error percentage of the CPU clock. This value is configured via MHC and is used during startup self-test of...","GUID-5576C941-4C05-4B9B-AACF-09F09D2233C1.html@@@22 CLASSB_SRAM_APP_AREA_START@@@Summary Defines the start address of the SRAM for the application. Description This constant defines the start address of the SRAM for the application. First 1kB of the SRAM is reserved for the Class...","GUID-57D7690C-7827-4BC3-B642-02A6306A4670.html@@@45 CLASSB_GetTestResult@@@Function CLASSB_TEST_STATUS CLASSB_GetTestResult (CLASSB_TEST_TYPE test_type, CLASSB_TEST_ID test_id); Summary Returns the result of the specified self-test. Description This function reads the test...","GUID-5842B877-F22D-4CB4-8D32-32FBFDF3CF79.html@@@18 CLASSB_INTR_VECTOR_TABLE_SIZE@@@Summary Defines the size of the vector table. Description This constant defines the size of the vector table. Remarks This value must not be modified. #define CLASSB_INTR_VECTOR_TABLE_SIZE...","GUID-59BA8FDC-E44B-4ABC-9AC0-5BB051D0D8BD.html@@@40 CLASSB_ClearTestResults@@@Function void CLASSB_ClearTestResults (CLASSB_TEST_TYPE test_type); Summary Clears the results of SSTs or RSTs. Description This function clears all the test results of a given type of test...","GUID-5ACD4D21-9D71-45C5-A182-068BCC656AAF.html@@@25 CLASSB_CPU_PC_TEST_VALUES@@@Summary Data type for PC Test input and output values. Description The PC tests performs logical left-shift of the input value and returns it. Values from this enum can be used as arguments. Remarks...","GUID-5AE8782E-B79A-4DC4-B6D4-C570EDC3261D.html@@@46 CLASSB_GlobalsInit@@@Function static void CLASSB_GlobalsInit ( void ); Summary This function initializes the global variables for the classb library. Description The parameters used by the Class B library are access with...","GUID-5C1242C4-17BF-4786-A087-1C3C898C50C1.html@@@2 CLASSB_CLOCK_DEFAULT_CLOCK_FREQ@@@Summary Default CPU clock speed. Description Defines the default CPU clock speed after a reset. Remarks This value must not be modified. #define CLASSB_CLOCK_DEFAULT_CLOCK_FREQ ( 4000000U )...","GUID-65F764E6-4C88-49C0-8C0A-3B6CBC8F216F.html@@@15 CLASSB_INTR_MAX_INT_COUNT@@@Summary Defines the upper limit for interrupt count. Description This constant defines the upper limit for interrupt count for the interrupt self-test. Remarks This value must not be modified. #define...","GUID-671B2883-40EA-421F-95AE-278CACA0C029.html@@@54 CLASSB_SST_WDT_Recovery@@@Function static void CLASSB_SST_WDT_Recovery ( void ); Summary This function is called if a WDT reset is caused while a startup self-test is running. Description This function is used inside the...","GUID-674A9708-191F-418D-A6DC-15B278E7D050.html@@@19 CLASSB_INVALID_TEST_ID@@@Summary Invalid test ID. Description Defines a constant to initialize the variable which holds the ID of the ongoing self-test. Remarks This value must not be modified. #define CLASSB_INVALID_TEST_ID...","GUID-67926BF4-7896-4E7A-A27A-852883D713C4.html@@@27 CLASSB_PORT_INDEX@@@Summary PORT index definitions for Class B library I/O pin test. Description This can be used in the I/O pin test. Remarks None. typedef enum { PORTA = 0 , PORTB = 1 , PORTC = 2 , }...","GUID-7069A8B3-1181-40A4-96A2-E65A52CD5178.html@@@35 CLASSB_TEST_STATUS@@@Summary Identifies result from Class B library test. Description This is return type for self-tests. Remarks None. typedef enum { CLASSB_TEST_NOT_EXECUTED = 0 , CLASSB_TEST_PASSED = 1...","GUID-726CACDF-70AC-477E-9F05-DCC67FE956D4.html@@@9 CLASSB_CLOCK_TEST_RATIO_NS_MS@@@Summary Ratio of milli second to nano second. Description Defines the ratio of milli second to nano second. This is used to calculate the duration of CPU clock test in terms of RTC cycles. Remarks...","GUID-72C1A687-C7AC-418D-93BC-2E3C9A65A886.html@@@44 CLASSB_FLASH_EccInit@@@Function void CLASSB_FLASH_EccInit (CLASSB_FLASH_ECC_CALLBACK callback, uintptr_t context); Summary Initialize ECC to perform fault detection on FLASH. Description This function is used to register...","GUID-7551DC67-D79D-4F0C-B56F-7B17E12400E0.html@@@The Microchip Website@@@Microchip provides online support via our website at www.microchip.com/ . This website is used to make files and information easily available to customers. Some of the content available includes...","GUID-7FE2AD27-49D8-466B-BC04-67F8E347BA0E.html@@@13 CLASSB_INTERRUPT_TEST_VAR_ADDR@@@Summary Address of the variable which keeps interrupt test internal status. Description Defines the address of the variable which keeps interrupt test internal status. Remarks This value must not be...","GUID-7FE55FB2-2AD9-43F7-A541-113EA9392F7F.html@@@7 CLASSB_CLOCK_MUL_FACTOR@@@Summary Multiplication factor used in clock test. Description Defines the multiplication factor used in clock test. This is used to calculate the CPU clock error. Used to avoid the use of floating...","GUID-8CC42BD2-2F16-47C4-A0FA-33BCE24694DD.html@@@30 CLASSB_RST_RESULT_BF@@@Summary Pointer to the structure for the Class B library run-time self-test result. Description For bit-field representation of Class B library test results. Remarks None. typedef struct {...","GUID-8EDFA8BE-3FDF-4D4A-A246-876A184AB7B4.html@@@43 CLASSB_FLASH_ECC_InterruptHandler@@@Function void __attribute__ ((used)) CLASSB_FLASH_ECC_InterruptHandler ( void ); Summary This function is called if FLASH ECC interrupt occurs. Description This function will handle the interrupt and...","GUID-997BC08F-614D-4D9B-9D3B-52CC0437BCBD.html@@@28 CLASSB_PORT_PIN@@@Summary PIN definitions for Class B library I/O pin test. Description This can be used in the I/O pin test. Remarks None. typedef enum { PIN0 = 0 , PIN1 = 1 , PIN2 = 2 , PIN3 = 3 , PIN4 = 4 , PIN5 = 5...","GUID-9B84075E-D3F6-4F2A-A1A9-30CC71EC088A.html@@@57 CLASSB_TestWDT@@@Function static void CLASSB_TestWDT ( void ); Summary This function tests the WatchDog Timer (WDT). Description This function is called from CLASSB_Init(). It tests whether the WDT can reset the...","GUID-9F25311D-6FF5-4489-AC46-B4C87C11D14E.html@@@56 CLASSB_RST_IOTest@@@Function CLASSB_TEST_STATUS CLASSB_RST_IOTest (CLASSB_PORT_INDEX port, CLASSB_PORT_PIN pin, CLASSB_PORT_PIN_STATE state); Summary This self-test can be used to perform plausibility checks on IO pins...","GUID-A0D8479C-A2D4-4949-88B1-66BEAF70FF77.html@@@6 CLASSB_CLOCK_MAX_TEST_ACCURACY@@@Summary Maximum detectable accuracy for clock self-test. Description Defines the maximum detectable accuracy for clock self-test. Remarks This value must not be modified. #define...","GUID-A14CDB10-388E-4B47-95C4-B0ECF5BFCB96.html@@@4 CLASSB_CLOCK_MAX_CLOCK_FREQ@@@Summary Maximum CPU clock speed. Description Defines the maximum CPU clock speed for the microcontroller. Remarks This value must not be modified. #define CLASSB_CLOCK_MAX_CLOCK_FREQ ( 48000000U )...","GUID-A4CE4857-C768-4FE1-B854-81D5ECE4A1C9.html@@@20 CLASSB_ONGOING_TEST_VAR_ADDR@@@Summary Address at which the ID of ongoing test is stored. Description This constant defines the address in SRAM where the the ID of ongoing test is stored. Remarks This value must not be modified...","GUID-A7090B84-803D-4E47-86ED-EDE26F437B7E.html@@@12 CLASSB_INTERRUPT_COUNT_VAR_ADDR@@@Summary Address of the variable which keeps interrupt count. Description Defines the address of the variable which keeps interrupt count. Remarks This value must not be modified. #define...","GUID-A7A32F61-F6CE-4C51-9FE4-D2F8EE53A02E.html@@@1 MPLAB\u00AE Harmony Class B Library for PIC32CM JH devices@@@The Class B Library provides APIs to perform self-tests for the on-board systems of the microcontroller. Features Tested by the Class B Library Table 1 - Components tested by the Class B library...","GUID-ADB76E99-DC24-4AF5-9900-BED214AAAF86.html@@@Product Identification System@@@To order or obtain information, e.g., on pricing or delivery, refer to the factory or the listed sales office...","GUID-B3936689-D4E5-4169-8440-6B2098B996F4.html@@@24 CLASSB_WDT_TEST_IN_PROG_VAR_ADDR@@@Summary Address of the variable which indicates that a WDT test is in progress. Description Defines the address of the variable which indicates that a WDT test is in progress. Remarks This value must...","GUID-B54A1C03-6D1B-4C97-800A-7F12C384E508.html@@@33 CLASSB_TEST_ID@@@Summary Identifies Class B library tests. Description This enumeration can be used to read the self-test status and update it. Test ID corresponds to the bit position at which the 2-bit test result is...","GUID-BB4B391A-446B-48F6-BC67-30240CEDC9EA.html@@@53 CLASSB_SST_InterruptTest@@@Function CLASSB_TEST_STATUS CLASSB_SST_InterruptTest ( void ); Summary This self-test checks basic functionality of the interrupt handling mechanism. Description This self-test configures the Nested...","GUID-BD6565E3-43A3-4C50-A07A-9D4244ADEF54.html@@@21 CLASSB_RESULT_ADDR@@@Summary Address of test results. Description This constant defines the address in SRAM where the test results are stored. Remarks This value must not be modified. #define CLASSB_RESULT_ADDR (...","GUID-C02C4D34-2ED6-4AEB-B8DD-DE9FE730B698.html@@@39 CLASSB_CPU_PCTest@@@Function CLASSB_TEST_STATUS CLASSB_CPU_PCTest (bool running_context); Summary This self-test checks the Program Counter register (PC) of the CPU, to detect stuck-at faults. Description This self-test...","GUID-C2AC9659-8558-4899-BF9B-51E6D061EFBF.html@@@8 CLASSB_CLOCK_RTC_CLK_FREQ@@@Summary RTC clock frequency. Description Defines the RTC clock frequency. Remarks This value must not be modified. #define CLASSB_CLOCK_RTC_CLK_FREQ ( 32768U )...","GUID-CDA512D8-0DE4-4672-8716-04CAC681CB38.html@@@Product Change Notification Service@@@Microchip\u2019s product change notification service helps keep customers current on Microchip products. Subscribers will receive email notification whenever there are changes, updates, revisions or errata...","GUID-CE9D1F56-A122-4879-9D69-1CC75919D51B.html@@@42 CLASSB_FLASH_Callback@@@Function static void CLASSB_FLASH_Callback (uint32_t status, uintptr_t context); Summary This function is used for interrupt callback. Description This function will be triggered when a single fault...","GUID-D39B53A5-8B0E-4EDF-8395-7543A19AF3F2.html@@@49 CLASSB_SelfTest_FailSafe@@@Function void CLASSB_SelfTest_FailSafe (CLASSB_TEST_ID test_id); Summary This function is called if any of the non-critical tests are failed. Description The self-tests for SRAM, Clock and Interrupt...","GUID-D5EE7029-FE3A-4C0A-85D2-D4ACF1ED4772.html@@@16 CLASSB_INTR_TEST_RTC_COUNT@@@Summary Defines the counter value for RTC peripheral. Description This constant defines the counter value for RTC peripheral, for the interrupt self-test. Remarks This value must not be modified...","GUID-DEF014E9-72F1-40B1-A5DB-416FAC7BCE4C.html@@@50 CLASSB_SRAM_ECC_InterruptHandler@@@Function void __attribute__ ((used)) CLASSB_SRAM_ECC_InterruptHandler ( void ); Summary This function is called if SRAM ECC interrupt occurs. Description This function will handle the interrupt and...","GUID-E3C1D3AB-B3FE-4758-97CC-B35E694DDB5C.html@@@52 CLASSB_SRAM_EccInit@@@Function void CLASSB_SRAM_EccInit (CLASSB_SRAM_ECC_CALLBACK callback, uintptr_t context); Summary Initialize ECC to perform fault detection on SRAM. Description This function is used to register the...","GUID-E683C2C5-95A7-40B9-8A8E-C5EB7DC08DCA.html@@@55 CLASSB_Startup_Tests@@@Function static CLASSB_STARTUP_STATUS CLASSB_Startup_Tests ( void ); Summary This function executes all startup self-tests inserted into classb.c file by the MHC. Description This function is called...","GUID-E8251634-7B15-4073-A103-5A5F128B8699.html@@@Microchip Devices Code Protection Feature@@@Note the following details of the code protection feature on Microchip products: Microchip products meet the specifications contained in their particular Microchip Data Sheet. Microchip believes that...","GUID-EF309583-E606-4AF4-AA52-BBE700598C26.html@@@36 CLASSB_TEST_TYPE@@@Summary Identifies type of the Class B library test. Description There are two categories of test. They are startup tests (SSTs) and run-time tests (RSTs). Test results for SSTs and RSTs are stored at...","GUID-F0477B9F-4EFD-42DA-924B-07139BA4FA4F.html@@@23 CLASSB_TEST_IN_PROG_VAR_ADDR@@@Summary Address of the variable which indicates that a Class B test is in progress. Description Defines the address of the variable which indicates that a Class B test is in progress. Remarks This...","GUID-F05182E4-B102-4775-A746-1FF37F465312.html@@@Customer Support@@@Users of Microchip products can receive assistance through several channels: Distributor or Representative Local Sales Office Embedded Solutions Engineer (ESE) Technical Support Customers should...","GUID-F1801BC9-FD14-4B7B-8387-24D2F8D9642B.html@@@47 CLASSB_IO_InputSamplingEnable@@@Function void CLASSB_IO_InputSamplingEnable (CLASSB_PORT_INDEX port, CLASSB_PORT_PIN pin); Summary Enable input sampling for an IO pin. Description Before testing an output pin with...","GUID-F2ADBF6A-0431-4E40-8C07-3526C729077D.html@@@41 CLASSB_ClockTest@@@Function CLASSB_TEST_STATUS CLASSB_ClockTest (uint32_t cpu_clock_freq, uint8_t error_limit, uint16_t clock_test_rtc_cycles, bool running_context); Summary This self-test checks whether the CPU clock...","GUID-F867194E-E705-44DA-9AD8-F566D4A096A5.html@@@26 CLASSB_INIT_STATUS@@@Summary Identifies Class B initialization status. Description This is return type for the function which initializes the Class B library during startup. This indicates whether the SSTs are executed or...","GUID-F9B2A159-D668-4CD5-B86C-83EC194036DE.html@@@29 CLASSB_PORT_PIN_STATE@@@Summary PORT pin state. Description This can be used in the I/O pin test. Remarks None. typedef enum { PORT_PIN_LOW = 0 , PORT_PIN_HIGH = 1 , PORT_PIN_INVALID = 2 } CLASSB_PORT_PIN_STATE...","cshelp.html@@@Context Sensitive Help@@@..."];
});